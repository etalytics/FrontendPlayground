name: CI

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  actions: read
  contents: read
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Set NX SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Lint Affected Projects
        run: pnpm exec nx affected -t lint

      - name: Run Unit Tests
        if: success()
        run: pnpm exec nx affected -t test

      - name: Build Affected Projects
        if: success()
        run: pnpm exec nx affected -t build

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Set NX SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run E2E Tests
        run: pnpm exec nx affected -t e2e

  publish-report:
    runs-on: ubuntu-latest
    needs: [build-and-test, e2e-tests]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Publish Test Report
        uses: ctrf-io/github-test-reporter@v1
        with:
          report-path: './.report/*.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()