name: CI

on:
  push:
    branches:
      - master
  pull_request:
    # types:
    #   - opened
    #   - synchronize
    #   - reopened
    #   - closed

# permissions:
#   actions: write
#   contents: write

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event.action != 'closed' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile

      # Build the Angular app
      - run: pnpm exec nx affected -t lint test build e2e
      - run: pnpm exec nx build your-app-name --prod

      # Upload build artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/apps/your-app-name

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: main
  #   if: ${{ github.event.action != 'closed' }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Download Build Artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build-artifacts
  #         path: dist/apps/your-app-name

  #     # Build Docker image using the downloaded artifact
  #     - name: Build Docker Image
  #       run: |
  #         docker build -t ${{ secrets.REGISTRY_URL }}/your-app-name:${{ github.run_id }} -f Dockerfile .

  #     # Login to the custom registry
  #     - name: Login to Custom Docker Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ secrets.REGISTRY_URL }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_PASSWORD }}

  #     # Push the Docker image
  #     - name: Push Docker Image
  #       run: |
  #         docker push ${{ secrets.REGISTRY_URL }}/your-app-name:${{ github.run_id }}

  #     # Deploy to server
  #     - name: Deploy to Self-Hosted Server
  #       run: |
  #         ssh user@your-server-ip "docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} && \
  #                                  docker pull ${{ secrets.REGISTRY_URL }}/your-app-name:${{ github.run_id }} && \
  #                                  docker stop pr-preview-${{ github.run_id }} || true && \
  #                                  docker run -d --rm --name pr-preview-${{ github.run_id }} -p 3000:80 ${{ secrets.REGISTRY_URL }}/your-app-name:${{ github.run_id }}"

  # cleanup:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.action == 'closed' }}
  #   steps:
  #     - name: Cleanup Deployment
  #       run: |
  #         ssh user@your-server-ip "docker stop pr-preview-${{ github.run_id }} && docker rm pr-preview-${{ github.run_id }} || true"
